package project1;

import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.sql.*;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Scanner;

import org.apache.commons.dbcp2.BasicDataSource;

public class JavaScanner2 implements Pm25Interface {

	public static void main(String[] args) {
		BasicDataSource dataSource = new BasicDataSource();
		dataSource.setDriverClassName("oracle.jdbc.OracleDriver");
		dataSource.setUrl("jdbc:oracle:thin:@//localhost:1521/xepdb1");
		dataSource.setUsername("PROJECT");
		dataSource.setPassword("project");
		dataSource.setMaxTotal(50); // 設定最多connection上線,超過使用量必須等待
		dataSource.setMaxIdle(50); // 設定最多idle的connection,超過的connection會被執行connection.close()

		try (Connection connection = dataSource.getConnection(); Statement stmt = connection.createStatement();) {
			int num1, num2, num3, num4, num5, num6,num7,num8,num9,num10,num11,num12;

			// 返回主畫面
			String string7 = null;
			Scanner scanner5 = new Scanner(System.in);
			while (true) {

				PreparedStatement pstmt1 = connection.prepareStatement("select * from table1 where country=?");
				pstmt1.setString(1, "臺北市");
				ResultSet rs1 = pstmt1.executeQuery();
				if (rs1.next()) {
					System.out.println("最近更新時間" + rs1.getDate("DATACREATIONDATE"));
					pstmt1.clearParameters();
				}
				System.out.println("" + "************************************************************\r\n"
						+ "************************************************************\r\n"
						+ "*******                歡迎使用PM2.5 查詢系統                       ******\r\n"
						+ "************************************************************\r\n"
						+ "************************************************************\r\n"
						+ "                                                                                      版本:1.0.0\r\n"
						+ " 請輸入需要操作的功能\r\n" + "\r\n" + "1.查詢PM2.5指數  2.資料新增  3.資料更新   4.資料修改  5.資料刪除   6.資料匯出");
							
				Scanner scanner = new Scanner(System.in);
				num3 = scanner.nextInt();
				// 進入查詢系統
				if (num3 == 1) {

					System.out.println(
							"請輸入欲查詢縣市\r\n " + " 1台北市  2新北市 3基隆市  4桃園市  5新竹市  6新竹縣  7苗栗縣  8台中市  9彰化縣 10南投縣11雲林縣\r\n"
									+ "12嘉義市13嘉義縣14台南市15高雄市16屏東縣17台東縣18花蓮縣19宜蘭縣20澎湖縣21金門縣22連江縣 ");

					Scanner scanner2 = new Scanner(System.in);
					num1 = scanner2.nextInt();

					if (num1 == 1) {
						PreparedStatement pstmt = connection
								.prepareStatement("select * from table1 where country = ? ");
						pstmt.setString(1, "臺北市");
						ResultSet rs = pstmt.executeQuery();
						while (rs.next()) {
							System.out.println(rs.getString("country") + rs.getString("site") + "地區的PM2.5數值為"
									+ rs.getString("PM25") + " μg/m3");
							pstmt.clearParameters();
						}
					}

					if (num1 == 2) {
						PreparedStatement pstmt = connection
								.prepareStatement("select * from table1 where country = ? ");
						pstmt.setString(1, "新北市");
						ResultSet rs = pstmt.executeQuery();
						while (rs.next()) {
							System.out.println(rs.getString("country") + rs.getString("site") + "地區的PM2.5數值為"
									+ rs.getString("PM25") + " μg/m3");
							pstmt.clearParameters();
						}
					}
					if (num1 == 3) {
						PreparedStatement pstmt = connection
								.prepareStatement("select * from table1 where country = ? ");
						pstmt.setString(1, "基隆市");
						ResultSet rs = pstmt.executeQuery();
						while (rs.next()) {
							System.out.println(rs.getString("country") + rs.getString("site") + "地區的PM2.5數值為"
									+ rs.getString("PM25") + " μg/m3");
							pstmt.clearParameters();
						}
					}
					if (num1 == 4) {
						PreparedStatement pstmt = connection
								.prepareStatement("select * from table1 where country = ? ");
						pstmt.setString(1, "桃園縣");
						ResultSet rs = pstmt.executeQuery();
						while (rs.next()) {
							System.out.println(rs.getString("country") + rs.getString("site") + "地區的PM2.5數值為"
									+ rs.getString("PM25") + " μg/m3");
							pstmt.clearParameters();
						}
					}
					if (num1 == 5) {
						PreparedStatement pstmt = connection
								.prepareStatement("select * from table1 where country = ? ");
						pstmt.setString(1, "新竹市");
						ResultSet rs = pstmt.executeQuery();
						while (rs.next()) {
							System.out.println(rs.getString("country") + rs.getString("site") + "地區的PM2.5數值為"
									+ rs.getString("PM25") + " μg/m3");
							pstmt.clearParameters();
						}
					}
					if (num1 == 6) {
						PreparedStatement pstmt = connection
								.prepareStatement("select * from table1 where country = ? ");
						pstmt.setString(1, "新竹縣");
						ResultSet rs = pstmt.executeQuery();
						while (rs.next()) {
							System.out.println(rs.getString("country") + rs.getString("site") + "地區的PM2.5數值為"
									+ rs.getString("PM25") + " μg/m3");
							pstmt.clearParameters();
						}
					}
					if (num1 == 7) {
						PreparedStatement pstmt = connection
								.prepareStatement("select * from table1 where country = ? ");
						pstmt.setString(1, "苗栗縣");
						ResultSet rs = pstmt.executeQuery();
						while (rs.next()) {
							System.out.println(rs.getString("country") + rs.getString("site") + "地區的PM2.5數值為"
									+ rs.getString("PM25") + " μg/m3");
							pstmt.clearParameters();
						}
					}
					if (num1 == 8) {
						PreparedStatement pstmt = connection
								.prepareStatement("select * from table1 where country = ? ");
						pstmt.setString(1, "台中市");
						ResultSet rs = pstmt.executeQuery();
						while (rs.next()) {
							System.out.println(rs.getString("country") + rs.getString("site") + "地區的PM2.5數值為"
									+ rs.getString("PM25") + " μg/m3");
							pstmt.clearParameters();
						}
					}
					if (num1 == 9) {
						PreparedStatement pstmt = connection
								.prepareStatement("select * from table1 where country = ? ");
						pstmt.setString(1, "彰化縣");
						ResultSet rs = pstmt.executeQuery();
						while (rs.next()) {
							System.out.println(rs.getString("country") + rs.getString("site") + "地區的PM2.5數值為"
									+ rs.getString("PM25") + " μg/m3");
							pstmt.clearParameters();
						}
					}
					if (num1 == 10) {
						PreparedStatement pstmt = connection
								.prepareStatement("select * from table1 where country = ? ");
						pstmt.setString(1, "南投縣");
						ResultSet rs = pstmt.executeQuery();
						while (rs.next()) {
							System.out.println(rs.getString("country") + rs.getString("site") + "地區的PM2.5數值為"
									+ rs.getString("PM25") + " μg/m3");
							pstmt.clearParameters();
						}
					}
					if (num1 == 11) {
						PreparedStatement pstmt = connection
								.prepareStatement("select * from table1 where country = ? ");
						pstmt.setString(1, "雲林縣");
						ResultSet rs = pstmt.executeQuery();
						while (rs.next()) {
							System.out.println(rs.getString("country") + rs.getString("site") + "地區的PM2.5數值為"
									+ rs.getString("PM25") + " μg/m3");
							pstmt.clearParameters();
						}
					}
					if (num1 == 12) {
						PreparedStatement pstmt = connection
								.prepareStatement("select * from table1 where country = ? ");
						pstmt.setString(1, "嘉義市");
						ResultSet rs = pstmt.executeQuery();
						while (rs.next()) {
							System.out.println(rs.getString("country") + rs.getString("site") + "地區的PM2.5數值為"
									+ rs.getString("PM25") + " μg/m3");
							pstmt.clearParameters();
						}
					}
					if (num1 == 13) {
						PreparedStatement pstmt = connection
								.prepareStatement("select * from table1 where country = ? ");
						pstmt.setString(1, "嘉義縣");
						ResultSet rs = pstmt.executeQuery();
						while (rs.next()) {
							System.out.println(rs.getString("country") + rs.getString("site") + "地區的PM2.5數值為"
									+ rs.getString("PM25") + " μg/m3");
							pstmt.clearParameters();
						}
					}
					if (num1 == 14) {
						PreparedStatement pstmt = connection
								.prepareStatement("select * from table1 where country = ? ");
						pstmt.setString(1, "臺南市");
						ResultSet rs = pstmt.executeQuery();
						while (rs.next()) {
							System.out.println(rs.getString("country") + rs.getString("site") + "地區的PM2.5數值為"
									+ rs.getString("PM25") + " μg/m3");
							pstmt.clearParameters();
						}
					}
					if (num1 == 15) {
						PreparedStatement pstmt = connection
								.prepareStatement("select * from table1 where country = ? ");
						pstmt.setString(1, "高雄市");
						ResultSet rs = pstmt.executeQuery();
						while (rs.next()) {
							System.out.println(rs.getString("country") + rs.getString("site") + "地區的PM2.5數值為"
									+ rs.getString("PM25") + " μg/m3");
							pstmt.clearParameters();
						}
					}
					if (num1 == 16) {
						PreparedStatement pstmt = connection
								.prepareStatement("select * from table1 where country = ? ");
						pstmt.setString(1, "屏東縣");
						ResultSet rs = pstmt.executeQuery();
						while (rs.next()) {
							System.out.println(rs.getString("country") + rs.getString("site") + "地區的PM2.5數值為"
									+ rs.getString("PM25") + " μg/m3");
							pstmt.clearParameters();
						}
					}

					if (num1 == 17) {
						PreparedStatement pstmt = connection
								.prepareStatement("select * from table1 where country = ? ");
						pstmt.setString(1, "臺東縣");
						ResultSet rs = pstmt.executeQuery();
						while (rs.next()) {
							System.out.println(rs.getString("country") + rs.getString("site") + "地區的PM2.5數值為"
									+ rs.getString("PM25") + " μg/m3");
							pstmt.clearParameters();
						}
					}
					if (num1 == 18) {
						PreparedStatement pstmt = connection
								.prepareStatement("select * from table1 where country = ? ");
						pstmt.setString(1, "花蓮縣");
						ResultSet rs = pstmt.executeQuery();
						while (rs.next()) {
							System.out.println(rs.getString("country") + rs.getString("site") + "地區的PM2.5數值為"
									+ rs.getString("PM25") + " μg/m3");
							pstmt.clearParameters();
						}
					}
					if (num1 == 19) {
						PreparedStatement pstmt = connection
								.prepareStatement("select * from table1 where country = ? ");
						pstmt.setString(1, "宜蘭縣");
						ResultSet rs = pstmt.executeQuery();
						while (rs.next()) {
							System.out.println(rs.getString("country") + rs.getString("site") + "地區的PM2.5數值為"
									+ rs.getString("PM25") + " μg/m3");
							pstmt.clearParameters();
						}
					}
					if (num1 == 20) {
						PreparedStatement pstmt = connection
								.prepareStatement("select * from table1 where country = ? ");
						pstmt.setString(1, "澎湖縣");
						ResultSet rs = pstmt.executeQuery();
						while (rs.next()) {
							System.out.println(rs.getString("country") + rs.getString("site") + "地區的PM2.5數值為"
									+ rs.getString("PM25") + " μg/m3");
							pstmt.clearParameters();
						}
					}
					if (num1 == 21) {
						PreparedStatement pstmt = connection
								.prepareStatement("select * from table1 where country = ? ");
						pstmt.setString(1, "金門縣");
						ResultSet rs = pstmt.executeQuery();
						while (rs.next()) {
							System.out.println(rs.getString("country") + rs.getString("site") + "地區的PM2.5數值為"
									+ rs.getString("PM25") + " μg/m3");
							pstmt.clearParameters();
						}
					}
					if (num1 == 22) {
						PreparedStatement pstmt = connection
								.prepareStatement("select * from table1 where country = ? ");
						pstmt.setString(1, "連江縣");
						ResultSet rs = pstmt.executeQuery();
						while (rs.next()) {
							System.out.println(rs.getString("country") + rs.getString("site") + "地區的PM2.5數值為 "
									+ rs.getString("PM25") + " μg/m3");
							pstmt.clearParameters();
						}
					}
					// 新增功能
				} else if (num3 == 2) {
					String string1, string2, string3 = null;
					Scanner scanner3 = new Scanner(System.in);

					PreparedStatement pstmt = connection
							.prepareStatement("insert into table1 (COUNTRY,SITE,PM25)values(?,?,?)");
					System.out.println("請輸入欲新增的縣市");
					string1 = scanner3.nextLine();
					pstmt.setString(1, string1);
					System.out.println("請輸入地區");
					string2 = scanner3.nextLine();
					pstmt.setString(2, string2);
					System.out.println("請輸入PM2.5數值");
					string3 = scanner3.nextLine();
					pstmt.setString(3, string3);
					System.out.println("是否確認新增?\r\n" + "1確認  2取消");
					num8 = scanner.nextInt();
					if (num8 == 1) {
						pstmt.execute();
						System.out.println("資料已寫入");
					}
					if (num8 == 2) {
						System.out.println("寫入已取消");
					}

				}
				// 更新資料
				else if (num3 == 3) {
					System.out.println("是否確認更新?\r\n" + "1確認  2取消");
					num9 = scanner.nextInt();
					if (num9 == 1) {
						URL url = new URL(
								"https://data.epa.gov.tw/api/v1/aqx_p_02?limit=1000&api_key=9be7b239-557b-4c10-9775-78cadfc555e9&format=csv");

						InputStream inp = url.openStream();
						BufferedInputStream binp = new BufferedInputStream(inp);
						InputStreamReader inpr = new InputStreamReader(binp);
						BufferedReader br = new BufferedReader(inpr);

						String query = "DELETE FROM table1";
						int delete = stmt.executeUpdate(query);
						if (delete > 0) {
							System.out.println("舊資料已刪除");
						} else {
							System.out.println("資料庫無資料.");
						}

						String line = null;
						while ((line = br.readLine()) != null) {
//						System.out.println(line);
							String reline = line.replace("Site,county,PM25,DataCreationDate,ItemUnit",
									"台灣,台灣省,27,2020-09-07 17:00,μg/m3");
//						System.out.println(reline);
//						if (reline != null && !reline.equals("") && !reline.equals("null")) {
							String item[] = reline.split(",");
							for (int i = 0; i < item.length; i++) {
//							System.out.println(item[i]);
							}

//						}			
							PreparedStatement pstmt = connection.prepareStatement(
									"insert into table1 (SITE,COUNTRY,pm25,datacreationdate)values(?,?,?,?)");
							pstmt.setString(1, item[0]);
							pstmt.setString(2, item[1]);
							pstmt.setString(3, item[2]);
//						if (item[2]==null) {
//							
//						}
//						else {
//						pstmt.setInt(3, Integer.valueOf(item[2]));
							// int內有NULL值 無法儲存
//						}			
							// string=>date
							SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm");
							Date date1 = sdf.parse(item[3]);
							long lg = date1.getTime();
							pstmt.setDate(4, new java.sql.Date(lg));
							pstmt.execute();
						}
						System.out.println("資料庫已更新");
					}
					else if (num9 == 2) {
						System.out.println("更新已取消");
					}

				}
				//資料修改

				String string1 = null, string2 = null, string3 = null;
				Scanner scanner3 = new Scanner(System.in);
				PreparedStatement pstmt = connection
						.prepareStatement("update table1 set PM25=? where site=?");
				
				
				System.out.println("請輸入修改的縣市 1臺北市  2新北市 3基隆市  4桃園市  5新竹市  6新竹縣  7苗栗縣  8台中市  9彰化縣 10南投縣11雲林縣\r\n"
						+ "12嘉義市13嘉義縣14臺南市15高雄市16屏東縣17台東縣18花蓮縣19宜蘭縣20澎湖縣21金門縣22連江縣 ");
				string1 = scanner.nextLine();
				System.out.println("請輸入地區");
				string2 = scanner.nextLine();
				pstmt.setString(2,string2);
				System.out.println("請輸入更新PM2.5數值");
				string3 = scanner.nextLine();
				pstmt.setString(1,string3);		
				System.out.println("確認是否修改\r\n" + "1確認  2取消");
				num1 = scanner.nextInt();
				if (num1 == 1) {
					pstmt.executeUpdate();
					pstmt.clearParameters();
					System.out.println("資料已修改");
				}
				if (num1 == 2) {
					System.out.println("修改已取消");
				}
				
				
				
				
				
				
				
				
				// 刪除資料
				else if (num3 == 5) {
					String string4 = null;
					Scanner scanner4 = new Scanner(System.in);
					PreparedStatement pstmt2 = connection.prepareStatement("delete from table1 where site=?");
					System.out.println("請輸入地區1臺北市  2新北市 3基隆市  4桃園市  5新竹市  6新竹縣  7苗栗縣  8台中市  9彰化縣 10南投縣11雲林縣\r\n"
							+ "12嘉義市13嘉義縣14臺南市15高雄市16屏東縣17台東縣18花蓮縣19宜蘭縣20澎湖縣21金門縣22連江縣 ");

					num4 = scanner4.nextInt();
					System.out.println("請輸入地區");
					// 新增一行nextLine() 因為nextInt()執行會回傳一個空白導致nextInt()被執行
					string1 = scanner4.nextLine();
					string1 = scanner4.nextLine();
					pstmt2.setString(1, string1);
					System.out.println("確認是否刪除\r\n" + "1確認  2取消");
					num1 = scanner.nextInt();
					if (num1 == 1) {
						pstmt2.executeUpdate();
						pstmt2.clearParameters();
						System.out.println("資料已刪除");
					}
					if (num1 == 2) {
						System.out.println("刪除已取消");
					}
				}
				//資料匯出
				
				
				
				
				
				System.out.println("");
				System.out.println("全部執行完畢");
				System.out.println("");
				System.out.println("按任意鍵返回主畫面");
				string7 = scanner5.nextLine();
			}
		} catch (

		SQLException e) {
			e.printStackTrace();

		} catch (MalformedURLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}

}
